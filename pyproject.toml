[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dbt-metaflow"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.10,<3.12"
license = { text = "MIT" }
keywords = []
authors = [{ name = "Bryan Galvin", email = "bryan.galvin@bestegg.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pandas>=2.2",
  "gitpython>=3.1",
  "boto3>=1.34.15",
  "loguru>=0.7.2",
  "metaflow>=2.10.8",
  "pydantic>=2.5.3",
  "rich>=13.7.0",
  "typer>=0.9.0",
]

[project.urls]
Documentation = "https://github.com/bcgalvin/dbt-metaflow#readme"
Issues = "https://github.com/bcgalvin/dbt-metaflow/issues"
Source = "https://github.com/bcgalvin/dbt-metaflow"

[project.scripts]
dbt-metaflow = "dbt_metaflow.cli:app"

[tool.hatch.version]
path = "dbt_metaflow/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "radon[toml]",
  "pytest>=7.4.3",
  "pytest-mock",
  "black>=23.12.1",
  "mypy-boto3>=1.34.8",
  "isort>=5.13.2",
  "coverage[toml]>=6.5",
  "pydeps>=1.11.0",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
  "coverage html",
  "coverage lcov",
]
cov = ["test-cov", "cov-report", "coverage json -o coverage.json"]
style = ["isort {args:dbt_metaflow tests}", "black {args:dbt_metaflow tests}"]

[[tool.hatch.envs.all.matrix]]
python = ["3.11"]

[tool.hatch.envs.types]
dependencies = ["mypy>=1.8.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:dbt_metaflow }"

[tool.mypy]
exclude = ["build", "dist", "tests"]
plugins = ["pydantic.mypy"]
files = ["dbt_metaflow/**/*.py"]
python_version = "3.11"
strict = true
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
show_error_codes = true
disable_error_code = ["import-not-found"]
cache_dir = ".mypy_cache"

[[tool.mypy.overrides]]
module = ["cli.*"]
disallow_untyped_defs = false
disable_error_code = ["import-not-found", "attr-defined"]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["pytest.*", "metaflow.*"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.isort]
line_length = 120
profile = "black"
known_first_party = ["dbt_metaflow"]
include_trailing_comma = true
multi_line_output = 3

[tool.black]
target-version = ["py38"]

[tool.ruff]
line-length = 120
target-version = "py38"
indent-width = 4
preview = true
extend-select = ["W292"]
include = ["dbt_metaflow/**/*.py", "tests/**/*.py"]
select = [
  "A",
  "ARG",
  "B",
  "BLE",
  "C",
  "C4",
  "C90",
  "COM",
  "DTZ",
  "E",
  "EM",
  "ERA",
  "F",
  "FBT",
  "FLY",
  "FURB",
  "G",
  "I",
  "ICN",
  "ISC",
  "LOG",
  "N",
  "PD",
  "PERF",
  "PGH",
  "PIE",
  "PL",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "PT",
  "Q",
  "RET",
  "RSE",
  "RUF",
  "RUF100",
  "S",
  "SIM",
  "SLF",
  "T",
  "T10",
  "T20",
  "TCH",
  "TID",
  "TRY",
  "UP",
  "W",
  "YTT",
]
ignore = [
  "FA100",
  "B008",
  "FBT001",
  "COM812",
  "FBT003",
  "ISC001",
  "E401",
  "Q000",
  "Q003",
  "PLR0913",
  "PLC0415",
  "PLR6301",
  "N805",
  "S301",
  "E203",
  "SLF001"
]

[tool.ruff.extend-per-file-ignores]
"__init__.py" = ["E402", "F401"]
"dbt_metaflow/cli/__init__.py" = ["PLR0917", "TRY301", "BLE001", "ARG001"]
"tests/**/*.py" = ["S105", "T201", "PLW1514"]

[tool.ruff.isort]
known-first-party = ["dbt_metaflow"]

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.coverage.run]
source_pkgs = ["dbt_metaflow", "tests"]
branch = true
parallel = true
omit = ["dbt_metaflow/__about__.py"]

[tool.coverage.paths]
dbt_metaflow = ["dbt_metaflow", "*/dbt-metaflow/dbt_metaflow"]
tests = ["tests", "*/dbt-metaflow/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.pytest.ini_options]
addopts = "-p no:warnings"
